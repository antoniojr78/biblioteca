<?xml version="1.0" encoding="UTF-8"?>
<beans default-autowire="byType"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">


	<context:annotation-config />
	<context:component-scan base-package="br.com.viniciusmrosa.dao"/>
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="username" value="root"/>
		<property name="password" value="123"/>
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/biblioteca"/>
	</bean>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		
		<property name="annotatedClasses">
			<array>
				<value>br.com.viniciusmrosa.modelo.Usuario</value>
				<value>br.com.viniciusmrosa.modelo.Colecao</value>
				<value>br.com.viniciusmrosa.modelo.Autor</value>
				<value>br.com.viniciusmrosa.modelo.Editora</value>
				<value>br.com.viniciusmrosa.modelo.Livro</value>		
			</array>
		</property>
		
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<tx:advice transaction-manager="transactionManager" id="txAdvice">
		<tx:attributes>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>		
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* br.com.viniciusmrosa.dao.hibernate.HB*.*(..))"/>
	</aop:config>	
	<!-- 
		O DataSource da aplicação.
		Neste caso, este só deve ser usado em ambiente de desenvolvimento, pois não nos
		oferece um pool de conexões.
		
		A cada chamada ao método getConnection() do bean obtido uma nova conexão é obtida.


	
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* br.com.viniciusmrosa.dao.hibernate.HB*.*(..))"/>
	</aop:config>
	
	
	-->
	
	
	
</beans>